servers = (
  {
    address = "0.0.0.0";
    chatnet = "freenode";
    port = "4244";
    password = "***";
    autoconnect = "yes";
  },
  {
    address = "0.0.0.0";
    chatnet = "bitlbee";
    port = "6667";
    password = "***";
    autoconnect = "yes";
  },
  {
    address = "irc.oftc.net";
    chatnet = "oftc";
    port = "6697";
    use_ssl = "yes";
    ssl_cert = "~/.private/certs/nick.pem";
    ssl_verify = "yes";
    ssl_cafile = "~/.private/certs/irc/CAs.pem";
    autoconnect = "no";
  }
);

chatnets = {
  oftc = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  freenode = {
    type = "IRC";
    autosendcmd = "/^msg NickServ identify ***;wait 4000";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  bitlbee = { type = "IRC"; };
};

channels = (
  { name = "#debian"; chatnet = "oftc"; autojoin = "Yes"; },
  { name = "#debian"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#emacs"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#ion"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#screen"; chatnet = "freenode"; autojoin = "Yes"; }
);

aliases = {
  J = "join";
  EXIT = "quit";
  M = "msg";
  CL = "clear";
  RUN = "SCRIPT LOAD";
  Q = "QUERY";
  SHITLIST = "/trigger add -name $0 -public -nocase -mask $0!*@* -regexp '^(.*)' -replace '[ignored]'";
  UNSHIT = "/trigger del $0";
  GHOST = "/msg NickServ ghost ootput ***";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://www.irssi.org";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        lag = { };
        chanact = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        typing_notice = { };
        join_notice = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
      disabled = "no";
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "window";
      placement = "top";
      position = "1";
      visible = "active";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
      disabled = "yes";
    };
    info = { disabled = "yes"; };
  };
};
settings = {
  core = {
    real_name = "ootput";
    user_name = "ootput";
    nick = "ootput";
    chanmode_expando_strip = "yes";
    awaylog_file = "~/logs/irc/away.log";
  };
  "fe-text" = { actlist_sort = "refnum"; lag_min_show = "500"; };
  "fe-common/core" = {
    theme = "fear2_mod";
    show_names_on_join = "no";
    activity_hide_level = "ALL -MSGS -DCC -DCCMSGS -HILIGHT";
    autocreate_own_query = "no";
    show_nickmode = "no";
    autolog = "yes";
    autolog_path = "~/logs/irc/$tag_$0.%Y-%m.log";
    autolog_level = "MSGS ACTIONS KICKS PUBLIC";
    activity_hilight_level = "MSGS NOTICES DCC DCCMSGS HILIGHT";
    activity_msg_level = "";
    bell_beeps = "yes";
    beep_msg_level = "MSGS DCC DCCMSGS HILIGHT";
  };
  "perl/core/scripts" = { bitlbee_send_typing = "no"; };
  "irc/core" = { skip_motd = "yes"; };
};
ignores = ( { level = "JOINS PARTS QUITS NICKS"; } );
logs = { };
hilights = ( { text = "ootput"; nick = "yes"; word = "yes"; } );
windows = {
  1 = { immortal = "yes"; name = "(status)"; level = "ALL"; };
  2 = { name = "hilight"; sticky = "yes"; };
  3 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#emacs";
        tag = "freenode";
      }
    );
  };
  4 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#screen";
        tag = "freenode";
      }
    );
  };
  5 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#ion";
        tag = "freenode";
      }
    );
  };
  6 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#debian";
        tag = "freenode";
      }
    );
  };
  7 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "&bitlbee";
        tag = "localhost";
      }
    );
  };
};
mainwindows = {
  1 = { first_line = "6"; lines = "23"; };
  2 = { first_line = "0"; lines = "6"; };
};
